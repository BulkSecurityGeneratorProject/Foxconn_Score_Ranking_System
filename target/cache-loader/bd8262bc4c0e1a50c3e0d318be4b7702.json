{"remainingRequest":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/ts-loader/index.js??ref--10-3!/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/angular-router-loader/src/index.js!/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/tslint-loader/index.js!/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/src/main/webapp/app/shared/service/CourseService.ts","dependencies":[{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/src/main/webapp/app/shared/service/CourseService.ts","mtime":1577820759056},{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/cache-loader/dist/cjs.js","mtime":1577828697691},{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/thread-loader/dist/cjs.js","mtime":1577828697492},{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\nvar app_constants_1 = require(\"app/app.constants\");\nvar CourseService = /** @class */ (function () {\n    function CourseService(http) {\n        this.http = http;\n        this.courseAddressUrl = app_constants_1.SERVER_API_URL + '/api/course/findAllCoursesDto';\n        this.courseAddressWithTNUrl = app_constants_1.SERVER_API_URL + '/api/course/findAllCoursesWithTNDto';\n        this.courseDeleteUrl = app_constants_1.SERVER_API_URL + '/api/course/deleteCourse';\n        this.courseUpdateUrl = app_constants_1.SERVER_API_URL + '/api/course/updateCourse';\n        this.addCourseToStudentUrl = app_constants_1.SERVER_API_URL + '/api/course/addCourseToStudent';\n        this.addNewCourseUrl = app_constants_1.SERVER_API_URL + '/api/course/addCourse';\n        this.registerCourseUrl = app_constants_1.SERVER_API_URL + '/api/course/registerCourse';\n        this.registeredCoursesUrl = app_constants_1.SERVER_API_URL + '/api/course/getRegisteredCourse';\n        this.dropRegisteredCourseUrl = app_constants_1.SERVER_API_URL + '/api/course/dropRegisteredCourse';\n    }\n    CourseService.prototype.getCourseInfo = function () {\n        debugger;\n        return this.http.get(\"\" + this.courseAddressUrl);\n    };\n    CourseService.prototype.getCourseInfoWithTN = function () {\n        return this.http.get(\"\" + this.courseAddressWithTNUrl);\n    };\n    CourseService.prototype.getRegisteredCourses = function () {\n        return this.http.get(\"\" + this.registeredCoursesUrl);\n    };\n    CourseService.prototype.delete = function (courseName) {\n        return this.http.delete(this.courseDeleteUrl + \"/\" + courseName);\n    };\n    CourseService.prototype.dropRegisteredCourse = function (courseName) {\n        return this.http.delete(this.dropRegisteredCourseUrl + \"/\" + courseName);\n    };\n    CourseService.prototype.registerCourse = function (courseName) {\n        return this.http.post(this.registerCourseUrl + \"/\" + courseName, courseName);\n    };\n    CourseService.prototype.update = function (course) {\n        return this.http.put(this.courseUpdateUrl, course);\n    };\n    CourseService.prototype.addCourseToStudent = function (courseName, currentUserCredential) {\n        return this.http.post(this.addCourseToStudentUrl, { courseName: courseName, currentUserCredential: currentUserCredential });\n    };\n    CourseService.prototype.addCourse = function (newCourse) {\n        debugger;\n        console.log('You are in Course Service');\n        console.log(newCourse.teacherId);\n        return this.http.post(this.addNewCourseUrl, newCourse);\n    };\n    CourseService = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\n    ], CourseService);\n    return CourseService;\n    var _a;\n}());\nexports.CourseService = CourseService;\n",{"version":3,"file":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/src/main/webapp/app/shared/service/CourseService.ts","sourceRoot":"","sources":["/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/angular-router-loader/src/index.js!/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/tslint-loader/index.js!/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/src/main/webapp/app/shared/service/CourseService.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAAkD;AAGlD,mDAAmD;AAInD;IAWI,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAV5B,qBAAgB,GAAG,8BAAc,GAAG,+BAA+B,CAAC;QACpE,2BAAsB,GAAG,8BAAc,GAAG,qCAAqC,CAAC;QAChF,oBAAe,GAAG,8BAAc,GAAG,0BAA0B,CAAC;QAC9D,oBAAe,GAAG,8BAAc,GAAG,0BAA0B,CAAC;QAC9D,0BAAqB,GAAG,8BAAc,GAAG,gCAAgC,CAAC;QAC1E,oBAAe,GAAG,8BAAc,GAAG,uBAAuB,CAAC;QAC3D,sBAAiB,GAAG,8BAAc,GAAG,4BAA4B,CAAC;QAClE,yBAAoB,GAAG,8BAAc,GAAG,iCAAiC,CAAC;QAC1E,4BAAuB,GAAG,8BAAc,GAAG,kCAAkC,CAAC;IAE/C,CAAC;IAExC,qCAAa,GAAb;QACI,QAAQ,CAAC;QACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,KAAG,IAAI,CAAC,gBAAkB,CAAC,CAAC;IAClE,CAAC;IAED,2CAAmB,GAAnB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,KAAG,IAAI,CAAC,sBAAwB,CAAC,CAAC;IAC9E,CAAC;IAED,4CAAoB,GAApB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,KAAG,IAAI,CAAC,oBAAsB,CAAC,CAAC;IACtE,CAAC;IAED,8BAAM,GAAN,UAAO,UAAkB;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAc,IAAI,CAAC,eAAe,SAAI,UAAY,CAAC,CAAC;IAC/E,CAAC;IAED,4CAAoB,GAApB,UAAqB,UAAkB;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAc,IAAI,CAAC,uBAAuB,SAAI,UAAY,CAAC,CAAC;IACvF,CAAC;IAED,sCAAc,GAAd,UAAe,UAAkB;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,iBAAiB,SAAI,UAAY,EAAE,UAAU,CAAC,CAAC;IACjF,CAAC;IAED,8BAAM,GAAN,UAAO,MAAiB;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;IACjE,CAAC;IAED,0CAAkB,GAAlB,UAAmB,UAAkB,EAAE,qBAA6B;QAChE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE,UAAU,YAAA,EAAE,qBAAqB,uBAAA,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,iCAAS,GAAT,UAAU,SAAoB;QAC1B,QAAQ,CAAC;QACT,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,IAAI,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;IACrE,CAAC;IAnDQ,aAAa;QADzB,iBAAU,EAAE;qEAYiB,iBAAU,oBAAV,iBAAU;OAX3B,aAAa,CAoDzB;IAAD,oBAAC;;CAAA,AApDD,IAoDC;AApDY,sCAAa","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CourseDto } from 'app/shared/model/course-dto.model';\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { CourseWithTNDto } from 'app/shared/model/courseWithTN-dto.model';\n\n@Injectable()\nexport class CourseService {\n    private courseAddressUrl = SERVER_API_URL + '/api/course/findAllCoursesDto';\n    private courseAddressWithTNUrl = SERVER_API_URL + '/api/course/findAllCoursesWithTNDto';\n    private courseDeleteUrl = SERVER_API_URL + '/api/course/deleteCourse';\n    private courseUpdateUrl = SERVER_API_URL + '/api/course/updateCourse';\n    private addCourseToStudentUrl = SERVER_API_URL + '/api/course/addCourseToStudent';\n    private addNewCourseUrl = SERVER_API_URL + '/api/course/addCourse';\n    private registerCourseUrl = SERVER_API_URL + '/api/course/registerCourse';\n    private registeredCoursesUrl = SERVER_API_URL + '/api/course/getRegisteredCourse';\n    private dropRegisteredCourseUrl = SERVER_API_URL + '/api/course/dropRegisteredCourse';\n\n    constructor(private http: HttpClient) {}\n\n    getCourseInfo(): Observable<CourseDto[]> {\n        debugger;\n        return this.http.get<CourseDto[]>(`${this.courseAddressUrl}`);\n    }\n\n    getCourseInfoWithTN(): Observable<CourseWithTNDto[]> {\n        return this.http.get<CourseWithTNDto[]>(`${this.courseAddressWithTNUrl}`);\n    }\n\n    getRegisteredCourses(): Observable<CourseDto[]> {\n        return this.http.get<CourseDto[]>(`${this.registeredCoursesUrl}`);\n    }\n\n    delete(courseName: String): Observable<Response> {\n        return this.http.delete<Response>(`${this.courseDeleteUrl}/${courseName}`);\n    }\n\n    dropRegisteredCourse(courseName: String): Observable<Response> {\n        return this.http.delete<Response>(`${this.dropRegisteredCourseUrl}/${courseName}`);\n    }\n\n    registerCourse(courseName: String) {\n        return this.http.post(`${this.registerCourseUrl}/${courseName}`, courseName);\n    }\n\n    update(course: CourseDto): Observable<Response> {\n        return this.http.put<Response>(this.courseUpdateUrl, course);\n    }\n\n    addCourseToStudent(courseName: String, currentUserCredential: String) {\n        return this.http.post(this.addCourseToStudentUrl, { courseName, currentUserCredential });\n    }\n\n    addCourse(newCourse: CourseDto) {\n        debugger;\n        console.log('You are in Course Service');\n        console.log(newCourse.teacherId);\n        return this.http.post<Response>(this.addNewCourseUrl, newCourse);\n    }\n}\n"]}]}