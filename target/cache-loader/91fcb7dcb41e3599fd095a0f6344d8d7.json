{"remainingRequest":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/ts-loader/index.js??ref--10-3!/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/angular-router-loader/src/index.js!/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/tslint-loader/index.js!/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/src/main/webapp/app/upload/upload.component.ts","dependencies":[{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/src/main/webapp/app/upload/upload.component.ts","mtime":1578417165707},{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/cache-loader/dist/cjs.js","mtime":1577828697691},{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/thread-loader/dist/cjs.js","mtime":1577828697492},{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/ts-loader/index.js","mtime":1519365772000},{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar core_2 = require(\"app/core\");\nvar UploadComponent = /** @class */ (function () {\n    function UploadComponent(principal, loginModalService, eventManager) {\n        this.principal = principal;\n        this.loginModalService = loginModalService;\n        this.eventManager = eventManager;\n    }\n    UploadComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.principal.identity().then(function (account) {\n            _this.account = account;\n        });\n        this.registerAuthenticationSuccess();\n    };\n    UploadComponent.prototype.registerAuthenticationSuccess = function () {\n        var _this = this;\n        this.eventManager.subscribe('authenticationSuccess', function (message) {\n            _this.principal.identity().then(function (account) {\n                _this.account = account;\n            });\n        });\n    };\n    UploadComponent.prototype.isAuthenticated = function () {\n        return this.principal.isAuthenticated();\n    };\n    UploadComponent.prototype.login = function () {\n        this.modalRef = this.loginModalService.open();\n    };\n    UploadComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-upload',\n            templateUrl: './upload.component.html',\n            styles: []\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.Principal !== \"undefined\" && core_2.Principal) === \"function\" && _a || Object, typeof (_b = typeof core_2.LoginModalService !== \"undefined\" && core_2.LoginModalService) === \"function\" && _b || Object, typeof (_c = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" && _c || Object])\n    ], UploadComponent);\n    return UploadComponent;\n    var _a, _b, _c;\n}());\nexports.UploadComponent = UploadComponent;\n",{"version":3,"file":"/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/src/main/webapp/app/upload/upload.component.ts","sourceRoot":"","sources":["/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/angular-router-loader/src/index.js!/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/node_modules/tslint-loader/index.js!/Users/rohan/ij_workspace/Work/Foxconn_Score_Ranking_System/src/main/webapp/app/upload/upload.component.ts"],"names":[],"mappings":";;;AAAA,sCAAgD;AAEhD,2CAA4C;AAE5C,iCAA+D;AAO/D;IAII,yBAAoB,SAAoB,EACpB,iBAAoC,EACpC,YAA6B;QAF7B,cAAS,GAAT,SAAS,CAAW;QACpB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,iBAAY,GAAZ,YAAY,CAAiB;IACjD,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAKC;QAJG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YAClC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,6BAA6B,EAAE,CAAC;IACzC,CAAC;IAED,uDAA6B,GAA7B;QAAA,iBAMC;QALG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,uBAAuB,EAAE,UAAA,OAAO;YACxD,KAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;gBAClC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YAC3B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAe,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;IAC5C,CAAC;IAED,+BAAK,GAAL;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAClD,CAAC;IA9BQ,eAAe;QAL3B,gBAAS,CAAC;YACP,QAAQ,EAAE,YAAY;YACtB,WAAW,EAAE,yBAAyB;YACtC,MAAM,EAAE,EAAE;SACb,CAAC;qEAKiC,gBAAS,oBAAT,gBAAS,sDACD,wBAAiB,oBAAjB,wBAAiB,sDACtB,6BAAe,oBAAf,6BAAe;OANxC,eAAe,CA+B3B;IAAD,sBAAC;;CAAA,AA/BD,IA+BC;AA/BY,0CAAe","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {NgbModalRef} from \"@ng-bootstrap/ng-bootstrap\";\nimport {JhiEventManager} from \"ng-jhipster\";\n\nimport {LoginModalService, Principal, Account} from \"app/core\";\n\n@Component({\n    selector: 'jhi-upload',\n    templateUrl: './upload.component.html',\n    styles: []\n})\nexport class UploadComponent implements OnInit {\n    account: Account;\n    modalRef: NgbModalRef;\n\n    constructor(private principal: Principal,\n                private loginModalService: LoginModalService,\n                private eventManager: JhiEventManager) {\n    }\n\n    ngOnInit() {\n        this.principal.identity().then(account => {\n            this.account = account;\n        });\n        this.registerAuthenticationSuccess();\n    }\n\n    registerAuthenticationSuccess() {\n        this.eventManager.subscribe('authenticationSuccess', message => {\n            this.principal.identity().then(account => {\n                this.account = account;\n            });\n        });\n    }\n\n    isAuthenticated() {\n        return this.principal.isAuthenticated();\n    }\n\n    login() {\n        this.modalRef = this.loginModalService.open();\n    }\n}\n"]}]}